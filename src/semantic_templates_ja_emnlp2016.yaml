#### Semantic templates for Japanese #####

# Basic logical form:
# x-ga y-o E-suru \C1 C2 K. exists e. (K(E,e) & C1(x,e,Nom) & C2(y,e,Acc))

# Type T ::= Entity | Event | Prop | T1 -> T2

# Variable     Type
# x,y,z,x1,x2  Entity, E
# e,e1,e2      Event, Ev
# F,G,F1,F2    E -> Prop
# J,J1,J2      Ev -> Prop
# N,N1,N2      (E -> Prop) -> E -> Prop (= Nmod)
# K,K1,K2      (Ev -> Prop) -> Ev -> Prop (= Vmod)
# Q,Q1,Q2      Nmod -> (E -> Prop) -> Prop (= NP*)
# C1,C2        Entity -> Event -> (Event -> Entity) -> Prop (= Role)
# S,S1,S2      Role -> Role -> Vmod -> Prop (= S*)
# V1           (Nmod -> (E -> Prop) -> Prop) -> Role -> Role -> Vmod -> Prop (= NP* -> S*)
# V2           (Nmod -> (E -> Prop) -> Prop) -> (Nmod -> (E -> Prop) -> Prop) -> Role -> Role -> Vmod -> Prop (= NP* -> NP* -> S*)
# E            expression (surface form)

# Constant          Type
# Nom,Acc,Dat,Attr  Event -> Entity
# AccI              Event -> Prop -> Prop

# Cat      Term : Type
# S        \C1 C2 K. exists e. K(E,e) : Role -> Role -> Vmod -> Prop (= S*)
# NP       \N F. Det(\x.N(E,x), F) : NMod -> (E -> Prop) -> Prop (= NP*)
# S\NP     \Q C1 C2 K. exists e. Q(\I.I, \x.exists e.(K(E,e) & C1(x,e,Nom))) : NP* -> S*
# S\NP\NP  \Q1 Q2 C1 C2 K. exists e. Q2(\I.I, \y.Q1(\I.I, \x.exists e.(K(E,e) & C1(x,e,Nom) & C2(y,e,Acc)))) : NP* -> NP* -> S*
# S/S      \S C1 C2 K. S(C1,C2,\J e1.K(\e2.(J(e2) & E(e2)),e1) : S* -> S* (extensional modification)
# S/S      \S C1 C2 K. S(C1,C2,\J e.K(E(J),e)) : S* -> S* (intensional modification)
# NP/NP    \Q N F. Q(\G x. N(\y.(E(y) & G(y)),x), F) : NP* -> NP* (extensional modification)
# NP/NP    \Q N F. Q(\G x. N(E(G),x), F) : NP* -> NP* (intensional modification)


##### Unary lexical rules #####

# S\NP ==> NP/NP 
- category: NP/NP
  rule: ADNint
  child0_category: S\NP
  semantics: \V1 Q N F. Q(\G.N(\y.(G(y) & V1(\G1 G2.G2(y), \x e T.(T(e) = x), \x e T.(T(e) = x), \I.I))), F)

# S ==> NP/NP
- category: NP/NP
  rule: ADNext
  semantics: \S Q N F. Q(\I.I, \x.(Content(x,\K.S(\x e T.(T(e) = x), \x e T.(T(e) = x),K)) & F(x)))

# S ==> NP/NP
- category: NP/NP
  rule: ADNext
  semantics: \S Q N F. Q(\G.N(\x.(G(x) & (S(\x e T.(T(e) = x), \x e T.(T(e) = x), \J e.(J(e) & ((Nom(e) = x))))))), F)
  child0_any_category: S\NP[case=nc]

# S ==> NP/NP
- category: NP/NP
  rule: ADNext
  semantics: \S Q N F. Q(\G.N(\x.(G(x) & (S(\x e T.(T(e) = x), \x e T.(T(e) = x), \J e.(J(e) & ((Nom(e) = x))))))), F)
  child0_any_pos: "形容詞"

# S ==> NP/NP
- category: NP/NP
  rule: ADNext
  semantics: \S Q N F. Q(\G.N(\x.(G(x) & (S(\x e T.(T(e) = x), \x e T.(T(e) = x), \J e.(J(e) & ((Nom(e) = x))))))), F)
  child0_any_category: S\S[form=da]

# NP ==> S/S
- category: S/S
  rule: ADV0
  semantics: \Q S C1 C2 K. S(C1,C2,\J e1.K(\e2.(J(e2) & Q(\I.I,\x.Mod(x,e2))),e1))
  child0_category: NP

# S ==> S/S
- category: S/S
  rule: ADV0
  semantics: \S1 S2 C1 C2 K. (S1(C1,C2,K) & S2(C1,C2,K))
  child0_category: S


##### Binary lexical rules #####

- category: NP/NP
  rule: <
  semantics: \L R Q N F. forall x.(Q(\G.N(\y.(G(y) & (x = y))), \y.True) -> F(x))
  child0_surf: すべて
  child1_surf: の

- category: NP/NP
  rule: <
  semantics: \L R Q N F. forall x.(Q(\G.N(\y.(G(y) & (x = y))), \y.True) -> F(x))
  child0_surf: 各々
  child1_surf: の

- category: NP/NP
  rule: <
  semantics: \L R Q N F. forall x.(Q(\G.N(\y.(G(y) & (x = y))), \y.True) -> F(x))
  child0_surf: それぞれ
  child1_surf: の

- category: S/S
  rule: <
  semantics: \Q R S C1 C2 K. forall x.(Q(\I.I, \y.(x = y)) -> S(C1,C2,\J e1.K(\e2.(J(e2) & (Nom(e2) = x)),e1)))
  child0_any_surf: どちら
  child1_surf: も

- category: NP
  rule: <
  semantics: \Q R N F. forall x.(Q(\G.N(\y.(G(y) & (y = x))),\x.True) -> F(x))
  child0_any_surf: どちら
  child1_surf: も

- category: NP
  rule: <
  semantics: \Q R N F. forall x.(Q(\G.N(\y.(G(y) & (y = x))),\x.True) -> F(x))
  child0_any_surf: どの
  child1_surf: も 

- category: NP
  rule: <
  semantics: \Q R N F. forall x.(Q(\G.N(\y.(G(y) & (y = x))),\x.True) -> F(x))
  child0_any_surf: 誰
  child1_surf: も

- category: NP
  rule: <
  semantics: \Q R N F. forall x.(Q(\G.N(\y.(G(y) & (y = x))),\x.True) -> F(x))
  child0_any_surf: 何
  child1_surf: も

- category: NP/NP
  rule: <
  semantics: \L R Q N F. Most(\x.(Q(\G.N(\y.(G(y) & (y = x))), \x.True)), F)
  child0_surf: ほとんど
  child1_surf: の

- category: NP/NP
  rule: <
  semantics: \L R Q N F. Most(\x.(Q(\G.N(\y.(G(y) & (y = x))), \x.True)), F)
  child0_surf: たいてい
  child1_surf: の

- category: NP/NP
  rule: <
  semantics: \L R Q N F. Most(\x.(Q(\G.N(\y.(G(y) & (y = x))), \x.True)), F)
  child0_surf: 多く
  child1_surf: の

- category: NP/NP
  rule: <
  semantics: \L R Q N F. Most(\x.(Q(\G.N(\y.(G(y) & (y = x))), \x.True)), F)
  child0_surf: たくさん
  child1_surf: の

- category: NP/NP
  rule: <
  semantics: \L R Q N F. Most(\x.(Q(\G.N(\y.(G(y) & (y = x))), \x.True)), F)
  child0_surf: 大勢
  child1_surf: の

- category: NP/NP
  rule: <
  semantics: \L R Q. Q
  child0_surf: 誰
  child1_surf: か

- category: NP
  rule: <
  semantics: \L R N F. Most(\x.N(\y.True,x),F)
  child0_surf: ほとんど
  child1_surf: が

- category: S
  rule: ">"
  semantics: \L R C1 C2 K1. Most(\x.L(\C3 C4 K2.exists e1.K2(\e2.(Nom(e2) = x),e1), C1, C2, \I.I), \x.exists e3.K1(\e4.(Nom(e4) = x),e3))
  child0_category: S/S
  child1_surf: ほとんど

- category: S\NP
  rule: ">Bx1"
  semantics: \L V1 Q C1 C2 K. Most(\y.Q(\I.I,\x.(x = y)), \y.V1(\F1 F2.F2(y),C1,C2,K))
  child0_any_surf: ほとんど
  child0_category: S/S

- category: S\NP
  rule: ">Bx1"
  semantics: \L V1 Q C1 C2 K. Most(\y.Q(\I.I,\x.(x = y)), \y.V1(\F1 F2.F2(y),C1,C2,K))
  child0_any_surf: たくさん
  child0_category: S/S

- category: S\NP
  rule: ">Bx1"
  semantics: \L V1 Q C1 C2 K. forall y.(Q(\I.I,\x.(x = y)) -> V1(\F1 F2.F2(y),C1,C2,K))
  child0_any_surf: 全員
  child0_category: S/S

- category: S\NP
  rule: ">Bx1"
  semantics: \L V1 Q C1 C2 K. forall y.(Q(\I.I,\x.(x = y)) -> V1(\F1 F2.F2(y),C1,C2,K))
  child0_any_surf: みな
  child0_category: S/S

- category: S\NP
  rule: ">Bx1"
  semantics: \L V1 Q C1 C2 K. forall y.(Q(\I.I,\x.(x = y)) -> V1(\F1 F2.F2(y),C1,C2,K))
  child0_any_surf: すべて
  child0_category: S/S

- category: S\NP
  rule: ">Bx1"
  semantics: \L V1 Q C1 C2 K. forall y.(Q(\I.I,\x.(x = y)) -> V1(\F1 F2.F2(y),C1,C2,K))
  child0_any_surf: それぞれ
  child0_category: S/S

- category: S\NP
  rule: ">Bx1"
  semantics: \L V1 Q C1 C2 K. forall y.(Q(\I.I,\x.(x = y)) -> V1(\F1 F2.F2(y),C1,C2,K))
  child0_any_surf: どちら # does not work
  child0_any_surf: も
  child0_category: S/S

- category: S\NP
  rule: ">Bx1"
  semantics: \L V1 Q C1 C2 K. forall y.(Q(\I.I,\x.(x = y)) -> V1(\F1 F2.F2(y),C1,C2,K))
  child0_any_surf: とも
  child0_category: S/S

- category: S/S
  rule: ">B"
  semantics: \M R S C1 C2 K1. forall x. (M(\R1 R2 K2. exists e1.K2(\e2.(Nom(e2) = x),e1), TrueP, TrueP, \I.I) -> S(C1,C2,\J e1.K1(\e2.(Nom(e2) = x),e1)))
  child0_category: S/S
  child1_category: S/S
  child1_surf: みな

- category: S/S
  rule: ">B"
  semantics: \M R S C1 C2 K1. forall x. (M(\R1 R2 K2. exists e1.K2(\e2.(Nom(e2) = x),e1), TrueP, TrueP, \I.I) -> S(C1,C2,\J e1.K1(\e2.(J(e2) & (Nom(e2) = x)),e1)))
  child0_category: S/S
  child1_category: S/S
  child1_any_base: どちら
  child1_any_surf: も

- category: S/S
  rule: ">B"
  semantics: \M R S C1 C2 K1. forall x. (M(\R1 R2 K2. exists e1.K2(\e2.(Nom(e2) = x),e1), TrueP, TrueP, \I.I) -> S(C1,C2,\J e1.K1(\e2.(J(e2) & (Nom(e2) = x)),e1)))
  child0_category: S/S
  child1_category: S/S
  child1_any_pos2: 助数詞
  child1_any_surf: とも

- category: S/S
  rule: <
  semantics: \L R S. S
  child0_surf: 誰
  child1_surf: か

- category: S/S
  rule: <
  semantics: \L R S. S
  child0_surf: 誰
  child1_surf: も

- category: S/S
  rule: <
  semantics: \L R S. S
  child_any_surf: 一
  child_any_pos2: 助数詞
  child1_surf: も

- category: S\NP
  rule: ">Bx1"
  semantics: \L V1 Q C1 C2 K. Few(\x.Q(\I.I, \y.(y = x)))
  child0_surf: ほとんど
  child0_category: S/S
  child1_category: S\NP
  child1_any_base: いる

- category: S\NP
  rule: ">Bx1"
  semantics: \L V1 Q C1 C2 K. Few(\x.Q(\I.I, \y.(y = x)))
  child0_surf: めったに
  child0_category: S/S
  child1_category: S\NP
  child1_any_base: いる
  child1_any_base: ない

- category: S\NP
  rule: ">Bx1"
  semantics: \L V1 Q C1 C2 K. Few(\x.Q(\I.I, \y.(y = x)))
  child0_surf: せいぜい
  child0_category: S/S
  child1_category: S\NP
  child1_any_pos2: 助数詞
  child1_any_base: だ

- category: S\NP
  rule: <B1
  semantics: \V1 R Q1 C1 C2 K. -Q1(\I.I, \x.V1(\F1 F2.F2(x),C1,C2,K)) # wide scope
  # semantics: \V1 R Q1 C1 C2 K. Q1(\I.I, \x.-V1(\F1 F2.F2(x),C1,C2,K)) # narrow scope
  child0_category: S\NP
  child1_base: ない

- category: (S\NP)\NP
  rule: <B2
  semantics: \V2 R Q1 Q2 C1 C2 K. Q2(\I.I,\x.-Q1(\I.I,\y.V2(\F1 F2.F2(y),\G1 G2.G2(x),C1,C2,K))) # intermediate scope
  # semantics: \V2 R Q1 Q2 C1 C2 K. Q2(\I.I,\x.Q1(\I.I,\y.-V2(\F1 F2.F2(y),\G1 G2.G2(x),C1,C2,K))) # narrow scope
  child0_category: (S\NP)\NP
  child1_base: ない

- category: (S\NP[case=ga])\NP[case=ni]
  rule: <B2
  semantics: \V2 R Q1 Q2 C1 C2 K. V2(Q1,Q2,\x e T.C1(x,e,Acc),\x e T.C2(x,e,Nom),K)
  child0_category: (S\NP[case=ga])\NP[case=ni]
  child1_base: れる # S\S

- category: (S\NP[case=ga])\NP[case=o]
  rule: <B2
  semantics: \V2 R Q1 Q2 C1 C2 K. V2(Q1,Q2,\x e T.C1(x,e,Acc),\x e T.C2(x,e,Acc),K)
  child0_category: (S\NP[case=ga])\NP[case=o]
  child1_base: れる # S\S

- category: S\NP[case=ga]
  rule: <B1
  semantics: \V1 R Q C1 C2 K. V1(Q,\x e T.C1(x,e,Acc),C2,K)
  child0_category: S\NP[case=ga]
  child1_base: れる


##### Semantic Templates #####

# Templates for NPs
- category: NP
  semantics: \E N F. exists x.(N(E,x) & F(x))
  coq_type: Entity -> Prop

# Templates for NP modifiers
- category: NP/NP
  semantics: \E Q N F. Q(\G x. N(\y.(E(y) & G(y)),x), F)
  coq_type: Entity -> Prop

- category: NP\NP
  semantics: \E Q N F. Q(\G x. N(\y.(E(y) & G(y)),x), F)
  coq_type: Entity -> Prop
 
# Templates for VP modifiers
- category: S/S
  semantics: \E S C1 C2 K. S(C1,C2,\J e1.K(\e2.(J(e2) & E(e2)),e1))
  coq_type: Event -> Prop

- category: S\S
  semantics: \E S C1 C2 K. S(C1,C2,\J e1.K(\e2.(J(e2) & E(e2)),e1))
  coq_type: Event -> Prop

- category: (S/S)\NP
  # semantics: \E Q S C1 C2 K. Q(\I.I, \x.S(C1,C2,\J e1.K(\e2.(J(e2) & E(e2,x)),e1))) # wide scope
  semantics: \E Q S C1 C2 K. S(C1,C2,\J e1.K(\e2.(J(e2) & Q(\I.I, \x.E(e2,x))),e1)) # narrow scope
  coq_type: Event -> Entity -> Prop

# Templates for adjectives
- category: S
  semantics: \E C1 C2 K. exists e.K(E,e)
  coq_type: Event -> Prop

- category: (S/S)\S
  semantics: \E S1 S2 C1 C2 K. S2(C1,C2,\J e1.K(\e2.(J(e2) & S1(\x e T.(T(e) = x),\x e T.(T(e) = x),\J e3.(J(e3) & (e3 = e2)))),e1))

# Templates for VPs
- category: S\NP[case=ga]
  semantics: \E Q C1 C2 K. Q(\I.I, \x.exists e.(K(E,e) & C1(x,e,Nom)))
  coq_type: Event -> Prop

- category: S\NP[case=o]
  semantics: \E Q C1 C2 K. Q(\I.I, \x.exists e.(K(E,e) & C1(x,e,Acc)))
  coq_type: Event -> Prop

- category: S\NP[case=ni]
  semantics: \E Q C1 C2 K. Q(\I.I, \x.exists e.(K(E,e) & C1(x,e,Dat)))
  coq_type: Event -> Prop

- category: S\NP[case=to]
  semantics: \E Q C1 C2 K. exists e.(K(E,e) & AccI(e,Q(\x.True, \x.True)))
  coq_type: Event -> Prop

- category: (S\NP[case=ga])\NP[case=o]
  semantics: \E Q2 Q1 C1 C2 K. Q1(\I.I, \x1.Q2(\I.I, \x2.exists e.(K(E,e) & C1(x1,e,Nom) & C2(x2,e,Acc))))
  coq_type: Event -> Prop

- category: (S\NP[case=ga])\NP[case=ni]
  semantics: \E Q2 Q1 C1 C2 K. Q1(\I.I, \x1.Q2(\I.I, \x2.exists e.(K(E,e) & C1(x1,e,Nom) & C2(x2,e,Dat))))
  coq_type: Event -> Prop

- category: (S\NP[case=o])\NP[case=ga]
  semantics: \E Q1 Q2 C1 C2 K. Q1(\I.I, \x1.Q2(\I.I, \x2.exists e.(K(E,e) & C1(x1,e,Nom) & C2(x2,e,Acc))))
  coq_type: Event -> Prop

- category: (S\NP[case=ni])\NP[case=ga]
  semantics: \E Q1 Q2 C1 C2 K. Q1(\I.I, \x1.Q2(\I.I, \x2.exists e.(K(E,e) & C1(x1,e,Nom) & C2(x2,e,Dat))))
  coq_type: Event -> Prop

- category: (S\NP[case=o])\NP[case=ni]
  semantics: \E Q1 Q2 C1 C2 K. Q1(\I.I, \x1.Q2(\I.I, \x2.exists e.(K(E,e) & C1(x1,e,Dat) & C2(x2,e,Acc))))
  coq_type: Event -> Prop

- category: (S\NP[case=ga])\NP[case=to]
  semantics: \E Q2 Q1 C1 C2 K. Q1(\I.I, \x.exists e.(K(E,e) & C1(x,e,Nom) & AccI(e,Q2(\I.I,\x.True))))
  coq_type: Event -> Prop

- category: (S[form=da]\NP[case=ga])\NP
  semantics: \E Q1 Q2 C1 C2 K. Q2(\I.I, \x1.Q1(\I.I, \x2.exists e.(K(E,e) & C1(x1,e,Nom) & C2(x2,e,Attr))))
  coq_type: Event -> Prop

- category: ((S\NP[case=ga])\NP[case=to])\NP[case=o]
  semantics: \E Q1 Q2 Q3 C1 C2 K. (Q3(\I.I, \x1.Q1(\I.I, \x3.exists e.(K(E,e) & C1(x1,e,Nom) & AccI(e,Q2(\I.I,\x2.True)) & C2(x3,e,Acc)))))
  coq_type: Event -> Prop

# Templates for particles

- category: (NP/NP)\S
  semantics: \E S Q N F. Q(\G.N(\x.(G(x) & S(\x e T.(T(e) = x),\x e T.(T(e) = x),\J e.(J(e) & (Nom(e) = x))))),F)


##### Lexical entries #####

# Lexical entries for NPs
- category: NP
  semantics: \E N F. (N(\x.True,E) & F(E))
  coq_type: Entity
  pos1: 固有名詞
  pos2: 人名

- category: NP/NP
  semantics: \E Q N F. Q(\G x.(N(G,E)), \x.(F(E) & F(x)))
  coq_type: Entity
  pos1: 固有名詞
  pos2: 人名

- category: NP
  semantics: \E N F. (N(\x.True,E) & F(E))
  coq_type: Entity
  pos1: 代名詞

- category: NP/NP
  semantics: \E Q N F. Q(\G x. ((this(G) = x) & N(\x.True, this(G))), F)
  surf: この

- category: NP/NP
  semantics: \E Q N F. Q(\G x. ((that(G) = x) & N(\x.True, that(G))), F)
  surf: あの

- category: NP
  semantics: \E N F. exists x. (N(E,x) & F(x))
  base: こと

- category: NP
  semantics: \E N F. exists x. (N(E,x) & F(x))
  base: の

- category: NP
  semantics: \E N F. exists x. (N(_人,x) & F(x))
  base: 人々

- category: NP/NP
  semantics: \E Q N F. Q(\G.N(\x.(G(x) & _人(x))), F)
  base: 人々

- category: NP\NP
  semantics: \E Q N F. Q(N,F)
  base: たち

- category: NP\NP
  semantics: \E Q N F. Q(N,F)
  base: 達

# Lexical entries for NP modifiers
- category: (NP/NP)\NP
  semantics: \E Q1 Q2 N F. Q2(\G z. N(\y.(Q1(\I.I, \x.(y = x)) & G(y)), z), F)
  base: の
  
- category: (NP/NP)\NP
  semantics: \E Q1 Q2 N F. Q2(\G z. N(\y.(Q1(\I.I, \x.(E(x) & (y = x))) & G(y)), z), F)
  pos1: 接尾
  coq_type: Entity -> Prop

- category: (NP/NP)\S
  semantics: \E S Q N F. Q(\G.N(\x.(G(x) & S(\x e T.(T(e) = x),\x e T.(T(e) = x),\J e.(J(e) & (Nom(e) = x))))),F)
  base: の

- category: (S/S)\NP
  semantics: \E Q S C1 C2 K. S(C1,C2,\J e1.K(\e2.(J(e2) & Q(\I.I, \x.((Nom(e2) = x)))),e1))
  base: の

- category: NP\S
  semantics: \E S N F. S(\x e T.(T(e) = x), \x e T.(T(e) = x), \J e1.exists x.(J(e1) & (Nom(e1) = x) & F(x)))
  base: が  

- category: (S/S)\S
  semantics: \E S1 S2 C1 C2 K. S1(\x e T.(T(e) = x), \x e T.(T(e) = x), \J1 e1.K(\e2.(J1(e2) & S2(C1,C2,\J2 e3.(J2(e3) & (Nom(e3) = Nom(e2))))),e1))
  base: は

- category: (S/S)\S
  semantics: \E S1 S2 C1 C2 K. S2(C1,C2,\J e1.K(\e2.(J(e2) & AccI(e2,S1(\x e T.(T(e) = x),\x e T.(T(e) = x),\I.I))),e1))
  base: という

# Lexical entries for determiners
- category: NP
  semantics: \E N F. forall x.(N(\y.True,x) -> F(x))
  base: すべて

- category: NP
  semantics: \E N F. forall x.(N(\y.True,x) -> F(x))
  base: 全員

- category: NP
  semantics: \E N F. forall x.(N(\y.True,x) -> F(x))
  base: 各々

- category: NP
  semantics: \E N F. forall x.(N(\y.True,x) -> F(x))
  base: それぞれ

- category: NP
  semantics: \E N F. exists x.(N(\y.True,x) & F(x))
  base: 誰か

- category: NP
  semantics: \E N F. Most(\x.N(\y.True,x),F)
  base: ほとんど

- category: NP
  semantics: \E N F. Most(\x.N(\y.True,x),F)
  base: 多く

- category: NP
  semantics: \E N F. exists x.(N(\y.True,x) & F(x))
  base: 誰

- category: NP
  semantics: \E N F. exists x.(N(\y.True,x) & F(x))
  base: 何

- category: NP
  semantics: \E N F. exists x.(N(\y.True,x) & F(x))
  base: どちら

- category: NP/NP
  semantics: \E Q. Q
  base: ある

- category: NP/NP
  semantics: \E Q N F. forall x.(Q(\G.N(\y.(G(y) & (x = y))), \y.TrueP) -> F(x))
  base: あらゆる

- category: NP/NP
  semantics: \E Q N F. forall x.(Q(\G.N(\y.(G(y) & (x = y))), \y.TrueP) -> F(x))
  base: 全

- category: NP/NP
  semantics: \E Q N F. forall x.(Q(\G.N(\y.(G(y) & (x = y))), \y.TrueP) -> F(x))
  base: 各

- category: NP/NP
  semantics: \E Q N F. Q(N,F)
  base: どの

- category: NP/NP
  semantics: \E Q N F. forall x.(Q(\G.N(\y.(G(y) & (x = y))), \y.True) -> F(x))
  base: みな

- category: (NP/NP)\NP
  semantics: \E Q1 Q2 N F. (Q1(N,F) | Q2(N,F))
  base: か

- category: (S/S)\NP
  semantics: \E Q S C1 C2 K. S(C1,C2,K)
  base: か

- category: NP\NP
  semantics: \E Q. Q
  pos2: 助数詞

# Lexical entries for particles and other expressions
- category: NP\NP
  semantics: \E Q. Q
  pos: 助詞

- category: NP[case=to]\S
  semantics: \E S N F. S(\x e T.(T(e) = x),\x e T.(T(e) = x),\I.I)

- category: NP\S
  semantics: \E S N F. WH(S(\x e T.(T(e) = x),\x e T.(T(e) = x),\I.I))
  base: か

- category: (NP/NP)\NP
  semantics: \E Q1 Q2 N F. (Q1(N,F) & Q2(N,F))
  base: と

- category: S/S
  semantics: \E S. S
  base: 少なくとも

- category: (S/S)\NP
  semantics: \E Q S C1 C2 K. Q(\I.I, \x.S(C1,C2,\J e1.K(\e2.(J(e2) & (Nom(e2) = x)),e1)))
  base: が

- category: (S/S)\NP
  semantics: \E Q S C1 C2 K. S(C1,C2,\J e1.K(\e2.(J(e2) & Q(\I.I,\x.((Dat(e2) = x)))),e1)) # narrow scope
  coq_type: Event -> Entity -> Prop
  base: に

- category: (S/S)\NP
  semantics: \E Q S C1 C2 K. Q(\I.I, \x.S(C1,C2,\J e1.K(\e2.(J(e2) & (Acc(e2) = x)),e1)))
  coq_type: Event -> Entity -> Prop
  base: を

- category: (S/S)\NP
  semantics: \E Q S C1 C2 K. Q(\I.I, \x.S(C1,C2,\J e1.K(\e2.(J(e2) & (Nom(e2) = x)),e1)))
  base: は

- category: (S/S)\NP
  semantics: \E Q S C1 C2 K. Q(\I.I, \x.S(C1,C2,\J e1.K(\e2.(J(e2) & ((Nom(e2) = x))),e1)))
  base: として

- category: (S/S)\NP
  semantics: \E Q S C1 C2 K. Q(\I.I, \x.S(C1,C2,\J e1.K(\e2.(J(e2) & E(x)),e1)))
  coq_type: Entity -> Prop
  base: 人

- category: (S/S)\NP
  semantics: \E Q S C1 C2 K. forall x. (S(C1,C2,\J e1.K(\e2.(J(e2) & (Nom(e2) = x)),e1)) | Q(\I.I, \y.(x = y)))
  base: しか

- category: (S/S)\S
  semantics: \E S1 S2 C1 C2 K. (S1(\x e T.(T(e) = x),\x e T.(T(e) = x),\I.I) -> S2(C1,C2,K))
  base: ば

# Lexical entries for intensional modifiers
- category: S/S
  semantics: \E S C1 C2 K. S(C1,C2,\J e.K(E(J),e))
  base: ほぼ

- category: S\S
  semantics: \E S C1 C2 K. S(C1,C2,\J e.K(E(J),e))
  base: 損ねる

- category: NP/NP
  rule: <
  semantics: \L R Q N F. Q(\G x. N(_fake(G),x), F)
  child0_surf: 偽物
  child1_surf: の

- category: NP/NP
  rule: <
  semantics: \L R Q N F. Q(\G x. (N(_一流(G),x) & N(G,x)), F)
  child0_surf: 一流
  child1_surf: の

- category: NP/NP
  rule: <
  semantics: \L R Q N F. Q(\G x. N(_former(G),x), F)
  child0_surf: かつて
  child1_surf: の

- category: NP/NP
  semantics: \E Q N F. Q(\G x. N(E(G),x), F)
  coq_type: Prop -> Prop
  surf: 自称

- category: NP/NP
  semantics: \E Q N F. Q(\G x. N(_former(G),x), F)
  surf: 元

# Lexical entries for verbs
- category: S\NP[case=ga]
  semantics: \E Q C1 C2 K. Q(\I.I, \x.True)
  base: いる

- category: S\NP[case=ga]
  semantics: \E Q C1 C2 K. Q(\I.I, \x.True)
  base: ある

- category: S\NP[case=ga]
  semantics: \E Q C1 C2 K. -Q(\I.I, \x.True)
  base: ない

- category: S\NP
  semantics: \E Q C1 C2 K. exists e.(K(Poss,e) & AccI(e,Q(\I.I, \x.True)))
  base: 有り得る
  coq_type: Event -> Prop

- category: S\NP
  semantics: \L R Q C1 C2 K. Q(\I.I,\x.exists e.(K(NonPoss,e) & C1(x,e,Nom)))
  child0_base: 有り得る
  child1_base: ない

# Lexical entries for copula
- category: (S\NP[case=ga])\NP
  semantics: \E Q1 Q2 C1 C2 K. Q2(\I.I, \x.exists e.(C1(x,e,Nom) & Q1(\I.I,\y.(y = x)) & K(\w.True,e)))
  base: だ

- category: S\NP
  semantics: \E Q C1 C2 K. Q(\I.I, \x.exists e.(C1(x,e,Nom) & K(\w.True,e)))
  base: だ

- category: S\S
  semantics: \E S. S
  base: だ

- category: S\S
  semantics: \E S C1 C2 K. S(C1,C2,K)
  surf: だ

- category: S\S
  semantics: \E S C1 C2 K. S(C1,C2,\J e1.K(\e2.(J(e2) & Past(e2)),e1))
  surf: た

- category: S\S
  semantics: \E S C1 C2 K. S(C1,C2,K)
  surf: て

- category: S\S
  semantics: \E S C1 C2 K. S(C1,C2,K)
  base: いる

- category: S
  semantics: \E C1 C2 K. exists e.K(E,e)
  coq_type: Event -> Prop
  base: だ

- category: (S\NP[case=ga])\NP
  semantics: \E Q1 Q2 C1 C2 K. Q2(\I.I, \x.exists e.(C1(x,e,Nom) & Q1(\I.I,\y.(y = x)) & K(\w.True,e)))
  base: は

- category: S\S
  semantics: \E S C1 C2 K. S(C1,C2,K)
  base: ある

- category: S\S
  semantics: \E S C1 C2 K. S(C1,C2,K)
  base: は

- category: S\S
  semantics: \E S C1 C2 K. -S(C1,C2,K)
  base: ない

- category: S
  semantics: \E C1 C2 K. exists e.K(E,e)
  coq_type: Event -> Prop
  pos1: "サ変接続"

- category: S/S
  semantics: \E S C1 C2 K. S(C1,C2,K)
  base: もし

- category: S\S
  semantics: \E S. S
  base: れる

- category: S\S
  semantics: \E S C1 C2 K. S(C1,C2,\J e1.K(\e2.(J(e2) & E(e2)),e1))
  base: せる

# Punctuation
- category: (NP/NP)\(NP/NP)
  semantics: \E X. X
  base: 、

- category: NP\NP
  semantics: \E X. X
  base: 、

- category: S\S
  semantics: \E X. X
  base: 、

- category: (S/S)\(S/S)
  semantics: \E X. X
  base: 、

- category: S\S
  semantics: \E S. S(\x e T.(T(e) = x), \x e T.(T(e) = x), \I.I)
  base: 。
